<?php
// $Id: fancy_login.module,v 1.4 2009/08/05 01:26:27 hakulicious Exp $

/**
 * Implementation of hook_init()
 * Loads the javascript on all pages except user/* when the user is not logged in
 */
function fancy_login_init()
{
	global $user;
	if(!$user->uid)
	{
		$path = drupal_get_path('module', 'fancy_login');
		$fl_settings = array
		(
			'screenFadeColor' => variable_get('screen_fade_color', 'white'),
			'screenFadeZIndex' => variable_get('screen_fade_z_index', '10'),
			'loginBoxHeight' => variable_get('login_box_height', 'auto'),
			'loginBoxWidth' => variable_get('login_box_width', '175px'),
			'loginBoxBackgroundColor' => variable_get('login_box_background_color', 'white'),
			'loginBoxGextColor' => variable_get('login_box_text_color', 'black'),
			'loginBoxBorderColor' => variable_get('login_box_border_color', 'black'),
			'loginBoxBorderWidth' => variable_get('login_box_border_width', '3px'),
			'loginBoxBorderStyle' => variable_get('login_box_border_style', 'solid'),
		);
		drupal_add_js(array('fancyLogin' => $fl_settings), 'setting');
		drupal_add_js($path . '/scripts/fancy_login.js');
		drupal_add_css($path . '/css/fancy_login.css');
	}
}

/**
 * Implementation of hook_menu()
 */
function fancy_login_menu()
{
	$menu['admin/settings/fancy_login'] = array
	(
		'title' => 'Fancy Login',
		'description' => 'Settings for Fancy Login Page',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('fancy_login_settings'),
		'access arguments' => array('Administer fancy login'),
	);
	return $menu;
}

/**
 * Implmentation of hook_perm()
 */
function fancy_login_perm()
{
	return array
	(
		'Administer fancy login',
	);
}

/**
 * Implementation of hook_footer()
 */
function fancy_login_footer()
{
    if (user_is_anonymous())
	{
		return '<div id="fancy_login_dim_screen"></div>' . fancy_login_get_form();
	}
}

/**
 * Function that is displayed in the popup to allow the user to log in
 */
function fancy_login_form()
{
	$form_id = 'user_login';
	$form = array();
	$form['name'] = array
	(
	 	'#title' => t('Username'),
		'#type' => 'textfield',
		'#maxlength' => USERNAME_MAX_LENGTH,
		'#size' => 15,
		'#required' => TRUE,
		'#attributes' => array('tabindex' => '1'),
	);
	$form['pass'] = array
	(
	 	'#title' => t('Password'),
		'#type' => 'password',
		'#required' => TRUE,
		'#size' => 15,
		'#attributes' => array('tabindex' => '2'),
	);
	$form['submit'] = array
	(
		'#type' => 'submit',
		'#value' => t('Log in'),
		'#weight' => 2,
		'#attributes' => array('tabindex' => '3')
	);
	$form['#validate'] = user_login_default_validators();
	$form['#build_id'] = sprintf('form-%s', md5(uniqid(mt_rand(), TRUE)));
	$form_state = array();
	drupal_prepare_form($form_id, $form, $form_state);
	drupal_process_form($form_id, $form, $form_state);
	$out = new stdClass;
	$out->form_start = sprintf("<form method='post' accept-charset='UTF-8' action='%s'><div>", url('user/login'));
	$out->form_end = "</div></form>";
	$out->name = drupal_render($form['name']);
	$out->pass = drupal_render($form['pass']);
	$out->submit = drupal_render($form['form_id']) . drupal_render($form['form_build_id']) . drupal_render($form['submit']);
	$items = array();
	if (variable_get('user_register', 1))
	{
		$items[] = l(t('Create new account'), 'user/register', array('attributes' => array('title' => t('Create a new user account.'))));
	}
	$items[] = l(t('Request new password'), 'user/password', array('attributes' => array('title' => t('Request new password via e-mail.'))));
	$form['links'] = array('#value' => theme('item_list', $items));
	$out->links = drupal_render($form['links']);
	return $out;
}

/**
 * Function that is called to create the popup that allows the user to log in
 */
function fancy_login_get_form()
{
	$path = drupal_get_path('module', 'fancy_login');
	$image_path = url($path . '/images/ajax-loader.gif', array('absolute' => TRUE));
	$login_form = fancy_login_form();
	$output = '<div id="fancy_login_login_box">';
	$output .= '<div id="fancy_login_form_contents">';
	$output .= '<a href="#" id="fancy_login_close_button">X</a>';
	$output .= $login_form->form_start;
	$output .= $login_form->name;
	$output .= $login_form->pass;
	$output .= $login_form->submit;
	$output .= $login_form->form_end;
	$output .= $login_form->links;
	$output .= '</div>';
	$output .= '<div id="fancy_login_ajax_loader"><img src="' . $image_path . '" alt="' . t('Loading') . '" /></div>';
	$output .= '</div>';
	return $output;
}

/**
 * Implementation of hook_block()
 */
function fancy_login_block($op = 'list', $delta = 0, $edit = array())
{
	global $user;
	if ($op == "list")
	{
	    $block = array();
    	$block[0]['info'] = t('Fancy Login Link');
   		return $block;
	}
	elseif($op == 'view' && !$user->uid && !$user->uid && !(arg(0) == 'user' && !is_numeric(arg(1))))
	{
		$block['subject'] = t('Login');
		$block['content'] = l(t('Login'), 'user/login');
		return $block;
	}
}

/**
 * Callback function for admin/settings/fancy_login
 * Allows the user to set various CSS settings related to the display of the popup window
 */
function fancy_login_settings()
{
	$form['explanation'] = array
	(
		'#value' => t('All settings on this page must be valid CSS settings for the item that they will modify. For information on what types of values are valid, check the links included in the descriptions underneath the inputs.'),
	);
	$form['screen_fade_color'] = array
	(
	 	'#title' => t('Screen Fade Color'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('screen_fade_color', 'white'),
		'#description' => t('This is the color that the screen fades to when the login box is activated. This should generally be black, white, or the same color as the background of your site. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8047.asp">background-color</a>')),
	);
	$form['screen_fade_z_index'] = array
	(
		'#title' => t('Screen Fade z-index'),
		'#type' => 'textfield',
		'#maxlength' => 4,
		'#size' => 8,
		'#default_value' => variable_get('screen_fade_z_index', '10'),
		'#description' => t('This is the z-index of the faded screen. If you find elements on your layout are appearing over top of the faded out part of your screen, you can increase this number, but you should probably not touch it otherwise. CSS propery !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8139.asp">z-index</a>')),
	);
	$form['login_box_height'] = array
	(
	 	'#title' => t('Login Box Height'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_height', 'auto'),
		'#description' => t('This is the height of the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8096.asp">height</a>')),
	);
	$form['login_box_width'] = array
	(
	 	'#title' => t('Login Box Width'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_width', '175px'),
		'#description' => t('This is the width of the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8137.asp">width</a>')),
	);
	$form['login_box_background_color'] = array
	(
	 	'#title' => t('Login Box Background Color'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_background_color', 'white'),
		'#description' => t('This is the background color of the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8047.asp">background-color</a>')),
	);
	$form['login_box_text_color'] = array
	(
	 	'#title' => t('Login Box Text Color'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_text_color', 'black'),
		'#description' => t('This is the color of the text inside the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8077.asp">color</a>')),
	);
	$form['login_box_border_color'] = array
	(
	 	'#title' => t('Login Box Border Color'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_border_color', 'black'),
		'#description' => t('This is the color of the border around the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8057.asp">border-color</a>')),
	);
	$form['login_box_border_width'] = array
	(
	 	'#title' => t('Login Box Border Width'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_border_width', '3px'),
		'#description' => t('This is the width of the border around the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8072.asp">border-width</a>')),
	);
	$form['login_box_border_style'] = array
	(
	 	'#title' => t('Login Box Border Style'),
		'#type' => 'textfield',
		'#maxlength' => 7,
		'#size' => 8,
		'#default_value' => variable_get('login_box_border_style', 'solid'),
		'#description' => t('This is the style (eg: solid, dotted) of the border around the login box. CSS property: !url.', array('!url' => '<a href="http://www.devguru.com/technologies/css2/8067.asp">border-style</a>')),
	);
	
	return system_settings_form($form);
}

/**
 * Validation function for the settings page
 */
function fancy_login_settings_validate($form, &$form_state)
{
	$test_values = array
	(
		'screen_fade_color' => 'Screen Fade Color',
		'screen_fade_z_index' => 'Screen Fade z-index',
		'login_box_height' => 'Login Box Height',
		'login_box_width' => 'Login Box Width',
		'login_box_background_color' => 'login_box_background_color',
		'login_box_text_color' => 'login_box_text_color',
		'login_box_border_color' => 'login_box_border_color',
		'login_box_border_width' => 'login_box_border_width',
		'login_box_border_style' => 'Login Box Border Style',
	);
	foreach($test_values as $machine=>$human)
	{
		if($form_state['values'][$machine] == '')
		{
			form_set_error($machine, t('!field must contain a value.', array('!field' => $human)));
		}
	}
}
